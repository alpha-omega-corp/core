syntax = "proto3";

package auth;
option go_package = "github.com/alpha-omega-corp/cloud/user/pkg/proto";
import "google/protobuf/empty.proto";

service AuthService {
  rpc Login(LoginRequest) returns (LoginResponse) {}
  rpc Register(RegisterRequest) returns (RegisterResponse) {}
  rpc Validate(ValidateRequest) returns (ValidateResponse) {}

  rpc GetUsers(google.protobuf.Empty) returns (GetUsersResponse) {}
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {}
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {}
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {}
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {}
  rpc GetUserPermissions(GetUserPermissionsRequest) returns (GetUserPermissionsResponse) {}

  rpc GetRoles(google.protobuf.Empty) returns (GetRolesResponse) {}
  rpc CreateRole(CreateRoleRequest) returns (CreateRoleResponse) {}
  rpc AssignRole(AssignRoleRequest) returns (AssignRoleResponse) {}

  rpc GetServices(google.protobuf.Empty) returns (GetServicesResponse) {}
  rpc GetServicePermissions(GetServicePermissionsRequest) returns (GetServicePermissionsResponse) {}
  rpc CreateServicePermissions(CreateServicePermissionsRequest) returns (CreateServicePermissionsResponse) {}
}

message GetUserPermissionsRequest {
  int64 userId = 1;
}

message GetUserPermissionsResponse {
  map<string, bool> matrix = 1;
}


message GetServicePermissionsRequest {
  int64 serviceId = 1;
}

message GetServicePermissionsResponse {
  repeated Permission permissions = 1;
}

message Permission {
  int64 id = 1;
  Role role = 2;
  Service service = 3;
  bool canRead = 4;
  bool canWrite = 5;
  bool canManage = 6;
}

message CreateServicePermissionsResponse {
  int64 status = 1;
  string error = 2;
}

message CreateServicePermissionsRequest {
  int64 roleId = 1;
  int64 serviceId = 2;
  bool canRead = 3;
  bool canWrite = 4;
  bool canManage = 5;
}

enum ServicesEnum {
  HOME = 0;
  ADMIN = 1;
  DOCKER = 2;
  PACKAGE = 3;
}
message Service {
  int64 id = 1;
  string name = 2;
}

message GetServicesRequest {}
message GetServicesResponse {
  repeated Service services = 1;
}

message GetUserRequest {
  int64 id = 1;
}

message GetUserResponse {
  User user = 1;
}

message DeleteUserRequest {
  int64 id = 1;
}

message DeleteUserResponse {
  int64 status = 1;
  string error = 2;
}

message CreateUserRequest {
  string email = 1;
  string name = 2;
  optional string password = 3;
}

message CreateUserResponse {
  int64 status = 1;
  string error = 2;
}

message UpdateUserRequest {
  int64 id = 1;
  string name = 2;
  repeated int64 roles = 3;
}

message UpdateUserResponse {
  int64 status = 1;
  string error = 2;
}

message AssignRoleRequest {
  int64 userId = 1;
  repeated int64 roles = 2;
}

message AssignRoleResponse {
  int64 status = 1;
  string error = 2;
}

message GetUsersRequest {}
message GetUsersResponse {
  repeated User users = 3;
}

message GetRolesRequest {}
message GetRolesResponse {
  repeated Role roles = 3;
}

message CreateRoleRequest {
  string name = 1;
}

message CreateRoleResponse {
  int64 status = 1;
  string error = 2;
}

message User {
  int64 id = 1;
  string email = 2;
  string name = 3;
  repeated Role roles = 4;
}

message RegisterRequest {
  string username = 1;
  string email = 2;
  string password = 3;
}

message RegisterResponse {
  int64 status = 1;
  string error = 2;
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  string token = 1;
  User user = 2;
}

message Role {
  int64 id = 1;
  string name = 2;
}

message ValidateRequest {string token = 1;}
message ValidateResponse {User user = 1;}
